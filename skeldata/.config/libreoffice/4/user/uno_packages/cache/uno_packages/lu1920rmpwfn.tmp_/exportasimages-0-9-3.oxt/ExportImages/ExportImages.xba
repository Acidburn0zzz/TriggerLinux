<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ExportImages" script:language="StarBasic">REM ***** BASIC *****
REM My greatest thanks and regards to Clio (Клио), who helped a lot in developing
REM and testing this extension at http://forumooo.ru/index.php?topic=1543.new;topicseen#new
REM
REM The extension was developed in order to be useful for you.
REM It is published under GPL v. 2 or 3 at your choice.
REM
REM Author Sergii Kuznietsov, svk@svk.pp.ua, www.svk.pp.ua
REM
REM ===================
REM
REM Моя особая благодарность Клио, который сильно помог в разработке
REM и тестировании этого расширения на форуме http://forumooo.ru/index.php?topic=1543.new;topicseen#new
REM
REM Это расширение было разработано с целью быть полезным для вас.
REM Оно публикуется под лицензией GPL 2 или 3  на ваш выбор.
REM
REM Автор Сергей Кузнецов, svk@svk.pp.ua, www.svk.pp.ua
REM
REM
REM
REM This macro was written on a base of examples from OOo forums
REM and Andrew Pitonyak http://www.pitonyak.org/book/
REM ***** BASIC *****
Option Explicit

dim doc
dim exportPath
dim exportName
dim slideNum
dim docDir
dim docName
dim oFolderPickerDlg
dim lastPageNumber as Long
dim formatString
dim decimalRep
dim oPropertyValue
dim imgType
dim dirText
dim nameText
dim Hpx as integer
dim Wpx as integer
dim jpgQ as integer
dim imgColor as boolean
dim pngCompr as integer
dim pngIL
dim gifIL
dim gifTrans
dim bmpColor
dim bmpRLE
dim bmpExMode
dim bmpDPI as integer
dim bmpSzW as double
dim bmpSzH as double
dim StopMark as boolean
dim sep As String

Dim oDialog as Object
Dim oDialog2 as Object
Dim oLibContainer As Object, oLib As Object
Dim oInputStreamProvider As Object
Dim oDialog As Object
Const sLibName = &quot;ExportImages&quot;
Const sDialogName = &quot;Dialog1&quot;
Const sDialogName2 = &quot;Dialog2&quot;
Dim oProgressBar as Object, oProgressBarModel As Object
Dim ProgressValue As Long
Dim ProgressValueMin As Long
Dim ProgressValueMax As Long

Sub ExportAsImages

DocumentFileNames &apos;returns current path and the current file name

ShowDialog

SplitSlides &apos;does the job

End Sub

Sub ShowDialog()
	
	REM library container
	oLibContainer = DialogLibraries
	REM load the library
	oLibContainer.loadLibrary( sLibName )
	REM get library
	oLib = oLibContainer.getByName( sLibName )
	REM get input stream provider
	oInputStreamProvider = oLib.getByName( sDialogName )
	REM create dialog control
	oDialog = CreateUnoDialog( oInputStreamProvider )
	REM show the dialog
	oDialog.Model.Step = 1
	imgType = &quot;jpg&quot;
	imgColor = true
	bmpExMode = 0
	StopMark = false

	dirText = oDialog.Model.getByName(&quot;dirTextField&quot;)
	nameText = oDialog.Model.getByName(&quot;nameTextField&quot;)

	oDialog.getControl(&quot;dirTextField&quot;).setText(docDir)
	oDialog.getControl(&quot;nameTextField&quot;).setText(docName)
	
	if oDialog.execute()=1 then
		OK
	else
		StopMark = true
	endif
End Sub

Sub OK
	dirText = oDialog.getControl(&quot;dirTextField&quot;)
	exportPath = dirText.Text

	nameText = oDialog.getControl(&quot;nameTextField&quot;)
	exportName = nameText.Text

	Hpx = oDialog.getControl(&quot;HeightField&quot;).Text
	Wpx = oDialog.getControl(&quot;WidthField&quot;).Text

	jpgQ = oDialog.getControl(&quot;jpgQualityField&quot;).Text
	pngCompr = oDialog.getControl(&quot;pngCompressionField&quot;).Text
	pngIL=oDialog.getControl(&quot;pngILCB&quot;).State
	gifTrans=oDialog.getControl(&quot;gifTransculent&quot;).State
	gifIL=oDialog.getControl(&quot;gifILCB&quot;).State
	bmpColor = oDialog.getControl(&quot;bmpColorLB&quot;).getSelectedItemPos()
	bmpRLE=oDialog.getControl(&quot;RLECB&quot;).State
	bmpDPI = oDialog.getControl(&quot;bmpDPILB&quot;).getSelectedItem()
	bmpSzW = oDialog.getControl(&quot;bmpSizeW&quot;).Text
	bmpSzH = oDialog.getControl(&quot;bmpSizeH&quot;).Text
End Sub

Sub SplitSlides
	if exportPath=&quot;&quot; or StopMark = true then Exit Sub
	dim i
	dim slide
	dim ocontrol
	ocontrol=Doc.getcurrentcontroller()
	lastPageNumber = doc.getdrawpages().count - 1
	ShowDialog2
	Wait 200
	formatString = Zeroes(numDigitsIn(lastPageNumber+1)-1)+&quot;#&quot; &apos;Format string for zero-padding
		
		for i = 0 to lastPageNumber
			slideNum = Format(i+1, formatString) &apos;Zero pad slide number
			slide=doc.drawpages(i)
			ExportShape(slide)
			ProgressValue = i+1
			oProgressBarModel.setPropertyValue( &quot;ProgressValue&quot;, ProgressValue )
			if StopMark = true then Exit Sub
		next i
	oDialog2.setVisible( False )
	Msgbox &quot;Images exported!&quot;, 64 ,&quot;Info&quot;
end sub

Sub ExportShape(oShape as Any)
	Dim Dl As Double
	Dl = oShape.Height/oShape.Width
	oShape
	&apos;http://www.oooforum.org/forum/viewtopic.phtml?t=51021
	&apos;inspired by http://codesnippets.services.openoffice.org/Office/Office.GraphicExport.snip

	&apos;creating filter data
	Dim aFilterData (7) as new com.sun.star.beans.PropertyValue

	If Wpx=0 OR Hpx=0 Then
		If Wpx=0 Then
		Wpx = Hpx/Dl
		EndIf
		if Hpx = 0 Then
		Hpx = Wpx*Dl
		EndIf
	aFilterData(0).Name = &quot;PixelWidth&quot;		&apos;
	aFilterData(0).Value = Wpx &apos;2000

	aFilterData(1).Name = &quot;PixelHeight&quot;
	aFilterData(1).Value = Hpx &apos;2000*Dl

	ElseIf Wpx&lt;&gt;0 AND Hpx&lt;&gt;0 Then
	aFilterData(0).Name = &quot;PixelWidth&quot;		&apos;
	aFilterData(0).Value = Wpx &apos;2000

	aFilterData(1).Name = &quot;PixelHeight&quot;
	aFilterData(1).Value = Hpx &apos;2000*Dl
	EndIf


	if imgType = &quot;jpg&quot; then
	&apos;filter data for the image/jpeg MediaType
	aFilterData(2).Name =&quot;Quality&quot;
	aFilterData(2).Value = jpgQ &apos;85 &apos;Quality: 1-100, 100 is best quality / lowest compression
	
	aFilterData(3).Name =&quot;ColorMode&quot;
	if imgColor = true then
		aFilterData(3).Value = 0&apos; Color;
	else
		aFilterData(3).Value = 1&apos; Grayscale
	endif
	endif

&apos;filter data for the image/png MediaType
	if imgType = &quot;png&quot; then
	aFilterData(2).Name =&quot;Compression&quot;
	aFilterData(2).Value = pngCompr
	aFilterData(3).Name =&quot;Interlaced&quot;
	if pngIL = 1 then
	aFilterData(3).Value = 1
	endif
	if pngIL = 0 then
	aFilterData(3).Value = 0
	endif
	endif


&apos;filter data for the image/gif MediaType
	if imgType = &quot;gif&quot; then
	aFilterData(2).Name =&quot;Translucent&quot;
	if gifTrans = 1 then
	aFilterData(2).Value = true
	endif
	if gifTrans = 0 then
	aFilterData(2).Value = false
	endif
	aFilterData(3).Name =&quot;Interlaced&quot;
	if gifIL = 1 then
	aFilterData(3).Value = 1
	endif
	if gifIL = 0 then
	aFilterData(3).Value = 0
	endif
	endif


&apos;filter data for the image/bmp MediaType
	if imgType = &quot;bmp&quot; then
	aFilterData(2).Name =&quot;Color&quot;
	aFilterData(2).Value = bmpColor
	aFilterData(3).Name =&quot;ExportMode&quot;
	aFilterData(3).Value = bmpExMode

	if bmpExMode = 1 then
	aFilterData(4).Name =&quot;Resolution&quot;
	aFilterData(4).Value = bmpDPI
	endif
	if bmpColor = 3 or bmpColor = 4 or bmpColor = 5 or bmpColor = 6 then
	aFilterData(5).Name =&quot;RLE_Coding&quot;
	if bmpRLB = 1 then
		aFilterData(5).Value = true
	endif
	if bmpRLB = 0 then
		aFilterData(5).Value = false
	endif
	endif

	if bmpExMode = 2 then
	aFilterData(6).Name =&quot;LogicalWidth&quot;
	aFilterData(6).Value = bmpSzW*100
	aFilterData(7).Name =&quot;LogicalHeight&quot;
	aFilterData(7).Value = bmpSzH*100
	endif
	endif

&apos;Setting UrlName
	Dim sFileUrl As String
	if imgType = &quot;jpg&quot; then
	sFileUrl = ConvertToURL( exportPath + exportName + &quot; - &quot; + slideNum + &quot;.jpg&quot;
	endif

	if imgType = &quot;png&quot; then
	sFileUrl = ConvertToURL( exportPath + exportName + &quot; - &quot; + slideNum + &quot;.png&quot;
	endif

	if imgType = &quot;gif&quot; then
	sFileUrl = ConvertToURL( exportPath + exportName + &quot; - &quot; + slideNum + &quot;.gif&quot;
	endif

	if imgType = &quot;bmp&quot; then
	sFileUrl = ConvertToURL( exportPath + exportName + &quot; - &quot; + slideNum + &quot;.bmp&quot;
	endif

	if imgType = &quot;tif&quot; then
	sFileUrl = ConvertToURL( exportPath + exportName + &quot; - &quot; + slideNum + &quot;.tif&quot;
	endif

	if imgType = &quot;svg&quot; then
	sFileUrl = ConvertToURL( exportPath + exportName + &quot; - &quot; + slideNum + &quot;.svg&quot;
	endif

	Dim aArgs (2) as new com.sun.star.beans.PropertyValue
	if imgType = &quot;jpg&quot; then
	aArgs(0).Name = &quot;MediaType&quot;
	aArgs(0).Value = &quot;image/jpeg&quot; &apos;image/gif , image/png ... see http://www.oooforum.org/forum/viewtopic.phtml?t=51021
	endif

	if imgType = &quot;png&quot; then
	aArgs(0).Name = &quot;MediaType&quot;
	aArgs(0).Value = &quot;image/png&quot; &apos;image/gif , image/jpeg ... see http://www.oooforum.org/forum/viewtopic.phtml?t=51021
	endif

	if imgType = &quot;gif&quot; then
	aArgs(0).Name = &quot;MediaType&quot;
	aArgs(0).Value = &quot;image/gif&quot; &apos;image/gif , image/jpeg ... see http://www.oooforum.org/forum/viewtopic.phtml?t=51021
	endif

	if imgType = &quot;bmp&quot; then
	aArgs(0).Name = &quot;MediaType&quot;
	aArgs(0).Value = &quot;image/x-MS-bmp&quot; &apos;image/gif , image/jpeg ... see http://www.oooforum.org/forum/viewtopic.phtml?t=51021
	endif

	if imgType = &quot;tif&quot; then
	aArgs(0).Name = &quot;MediaType&quot;
	aArgs(0).Value = &quot;image/tiff&quot; &apos;image/gif , image/jpeg ... see http://www.oooforum.org/forum/viewtopic.phtml?t=51021
	endif

	if imgType = &quot;svg&quot; then &apos; SVG export doesn&apos;t work
	&apos; aArgs(0).Name = &quot;FilterName&quot;
	&apos; aArgs(0).Value = &quot;impress_svg_Export&quot;
	&apos; aArgs(0).Value = &quot;svg_Export&quot;
	aArgs(0).Name = &quot;MediaType&quot;
	aArgs(0).Value = &quot;image/svg+xml&quot; &apos;image/gif , image/jpeg ... see http://www.oooforum.org/forum/viewtopic.phtml?t=51021
	endif

	aArgs(1).Name = &quot;URL&quot;
	aArgs(1).Value = sFileUrl
	aArgs(2).Name = &quot;FilterData&quot;
	aArgs(2).Value = aFilterData()

	&apos; if imgType=&quot;svg&quot; then &apos;not well working workaround for SVG export
	&apos;	ThisComponent.storeToUrl( sFileUrl, aArgs )
	&apos; else	
	Dim xExporter
	xExporter = createUnoService( &quot;com.sun.star.drawing.GraphicExportFilter&quot; )
	xExporter.setSourceDocument( oShape )
	xExporter.filter( aArgs() )
	&apos; endif
End Sub

Function PickFolderSpecific( docDir ) as string
	oFolderPickerDlg = createUnoService( &quot;com.sun.star.ui.dialogs.OfficeFolderPicker&quot; )
	&apos; oFolderPickerDlg = createUnoService( &quot;com.sun.star.ui.dialogs.FolderPicker&quot; )
	&apos; oFolderPickerDlg = createUnoService( &quot;com.sun.star.ui.dialogs.SystemFolderPicker&quot; )
	If docDir&lt;&gt;&quot;&quot; Then
		oFolderPickerDlg.setDisplayDirectory( ConvertToURL(docDir) ) Rem... Broken. Does not work with system folder picker.
	End If
	Dim PickFolderSpecific_tmp As String, send As String
	If oFolderPickerDlg.execute()=1 then
		PickFolderSpecific_tmp = ConvertFromURL( oFolderPickerDlg.getDirectory() )
		send = Right(PickFolderSpecific_tmp,1) &apos;последний символ, путь должен заканчиваться системным разделителем, а если его там нет, то нужно добавить
		if send=sep then
			send=&quot;&quot; &apos;если путь заканчивается системным разделителем, то всё ОК, ничего добавлять не надо
		else
			send=sep &apos; , а если нет, то его нужно добавить
		endif
		PickFolderSpecific = PickFolderSpecific_tmp+send
	Endif
End Function

&apos;Returns the minimum number of decimal digits required to represent a given integer
function NumDigitsIn(num as Integer) as Integer
	decimalRep = cstr(num)
	NumDigitsIn = Len(decimalRep)
end function

&apos;Returns the a string consisting of the given number of zeros
function Zeroes(num as Integer) as String
	dim result as String
	dim i as Integer
	result = &quot;&quot;
	for i = 1 to num
		result = result &amp; &quot;0&quot;
	next i
	Zeroes = result
end function

REM Author: Andrew Pitonyak
Sub DocumentFileNames
	Doc = ThisComponent
	sep = getPathSeparator()
	If (Not GlobalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;)) Then
		GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
	End If
	Dim sDocPath As String
	If (Doc.hasLocation()) Then
		sDocPath = ConvertFromURL(Doc.URL) &apos;sDocPath - это Path (не URL)
		Dim send As String
		send = Right(sDocPath,1) &apos;последний символ, путь должен заканчиваться системным разделителем, а если его там нет, то нужно добавить
		if send=sep then
			send=&quot;&quot;
		else
			send=sep
		endif
		docDir = DirectoryNameoutofPath(sDocPath, sep)+send
		docName = GetFileNameWithoutExtension(sDocPath, sep)
	Else
		docDir = ConvertFromURL(createUnoService("com.sun.star.util.PathSettings").Work)+sep
		docName = ThisComponent.Title
End If
End Sub

Sub PickFolder
	exportPath = PickFolderSpecific( docDir )
	If exportPath=&quot;&quot; then Exit Sub &apos;если была нажата кнопка закрыть или отмена в диалоге выбора папки, то exportPath=&quot;&quot;, поэтому нам ничего не нужно изменять
	docDir = ExportPath
	oDialog.getControl(&quot;dirTextField&quot;).setText(docDir)
	&apos;dirText = oDialog.Model.getByName(&quot;dirTextField&quot;)
	&apos; dirText.text = docDir
End Sub

Sub jpgDialog
	oDialog.Model.Step = 1
	imgType = &quot;jpg&quot;
End Sub

Sub pngDialog
	oDialog.Model.Step = 2
	imgType = &quot;png&quot;
End Sub

Sub gifDialog
	oDialog.Model.Step = 3
	imgType = &quot;gif&quot;
End Sub

Sub bmpDialog
	oDialog.Model.Step = 4
	imgType = &quot;bmp&quot;
End Sub

Sub tifDialog
	oDialog.Model.Step = 5
	imgType = &quot;tif&quot;
End Sub

Sub svgDialog
	oDialog.Model.Step = 6
	imgType = &quot;svg&quot;
End Sub

Sub ColorJPG
	imgColor = true
End Sub

Sub GrayJPG
	imgColor = false
End Sub

Sub SelectBMPColor
	bmpColor = oDialog.getControl(&quot;bmpColorLB&quot;).getSelectedItemPos()
	if bmpColor = 3 or bmpColor = 4 or bmpColor = 5 or bmpColor = 6 then
	oDialog.getControl(&quot;RLECB&quot;).setEnable(true)
	else
	oDialog.getControl(&quot;RLECB&quot;).setEnable(false)
	endif
End Sub

Sub bmpOriginalEM
	bmpExMode = 0
	oDialog.getControl(&quot;bmpDPILB&quot;).setEnable(false)
	oDialog.getControl(&quot;bmpSizeW&quot;).setEnable(false)
	oDialog.getControl(&quot;bmpSizeH&quot;).setEnable(false)
End Sub

Sub bmpDPIEM
	bmpExMode = 1
	oDialog.getControl(&quot;bmpDPILB&quot;).setEnable(true)
	oDialog.getControl(&quot;bmpSizeW&quot;).setEnable(false)
	oDialog.getControl(&quot;bmpSizeH&quot;).setEnable(false)
End Sub

Sub bmpSizeEM
	bmpExMode = 2
	oDialog.getControl(&quot;bmpDPILB&quot;).setEnable(false)
	oDialog.getControl(&quot;bmpSizeW&quot;).setEnable(true)
	oDialog.getControl(&quot;bmpSizeH&quot;).setEnable(true)
End Sub

Sub ShowExportMimeTypes()
	dim oDoc, oExportFilter, aMimeTypeNames
	oDoc = ThisComponent
	oExportFilter = createUnoService( &quot;com.sun.star.drawing.GraphicExportFilter&quot; )
	aMimeTypeNames = oExportFilter.getSupportedMimeTypeNames()

	&apos; Display result in a MsgBox...
	MsgBox Join( aMimeTypeNames, Chr(13) )

	&apos; Display result in a Writer doc.
	&apos; oOutput = StarDesktop.loadComponentFromURL( &quot;private:factory/swriter&quot;, &quot;_blank&quot;, 0, Array() )
	&apos; Writer_PrintLn( oOutput, Join( aMimeTypeNames, Chr(13) ) )
End Sub

Sub ShowDialog2()
	oInputStreamProvider = oLib.getByName( sDialogName2 )
	oDialog2 = CreateUnoDialog( oInputStreamProvider )
	ProgressValueMin = 1
	ProgressValueMax = lastPageNumber
	oProgressBarModel = oDialog2.getModel().getByName( &quot;PBar&quot; )
	oProgressBarModel.setPropertyValue( &quot;ProgressValueMin&quot;, ProgressValueMin)
	oProgressBarModel.setPropertyValue( &quot;ProgressValueMax&quot;, ProgressValueMax)
	
	REM show the dialog
	oDialog2.setVisible( True )
	&apos; oDialog2.execute()
End Sub

Sub CancelMacro
	StopMark = true
	&apos;oDialog2.endExecute()
End Sub
</script:module>